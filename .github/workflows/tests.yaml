name: Test and Deploy
on: [push, pull_request]
jobs:
  black:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: check black
        uses: psf/black@stable
  test:
    needs: black
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
        include:
          - os: macos-latest
            python-version: "3.12"
          - os: windows-latest
            python-version: "3.12"
    runs-on: ${{ matrix.os }}
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: install bpl
        run: pip install -e .[test]
      - name: download fonts
        run: python -c "import betterplotlib as bpl; bpl.set_style()"
      - name: run pytest with coverage
        run: coverage run -m pytest

      # handle coverage, only for one version (chose most recent python version, but
      # this shouldn't matter
      - name: make lcov file for Coveralls upload
        if: matrix.python-version == 3.12 && matrix.os == 'ubuntu-latest'
        run: coverage lcov -i
      - name: upload to Coveralls
        if: matrix.python-version == 3.12 && matrix.os == 'ubuntu-latest'
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: coverage.lcov

  # if tests have passed, trigger a rebuild of ReadTheDocs. I could simply do this
  # with a GitHub webhook, but I only want the docs to build if the tests pass
  build_docs:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: trigger build
        uses: dfm/rtds-action@v1
        with:
          webhook_url: ${{ secrets.RTDS_WEBHOOK_URL }}
          webhook_token: ${{ secrets.RTDS_WEBHOOK_TOKEN }}
          commit_ref: ${{ github.ref }}

  deploy:
    runs-on: ubuntu-latest
    needs: test
    # only do this for master branch
    if: github.ref == 'refs/heads/master'
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: pip install
        run: pip install build twine
      - name: build
        run: python -m build
      - name: upload to PyPI
        run: twine upload dist/* -u __token__ -p ${{ secrets.PYPI_API_TOKEN }}

